(var map (fn (f list) (.map list f)))
(var filter (fn (f list) (.filter list f)))
(var fold-left (fn (f init list) (.reduce list f init)))
(var fold-right (fn (f init list) (.reduceRight list f init)))
(var append (fn (xs ys) (.concat xs ys)))

; not really cons, you can't do (cons x y) at all, y has to be a list ys.
(var cons (fn (x ys) (.concat `(x) ys)))

(var car (fn (xs) (. xs 0)))
(var cdr (fn (xs) (.slice xs 1)))

(var cadr (fn (xs) (car (cdr xs))))
(var caddr (fn (xs) (car (cdr (cdr xs)))))
(var cadddr (fn (xs) (car (cdr (cdr (cdr xs))))))