(define-syntax make-lookup
  (syntax-rules ()
    [(_ k ...) 
     (obj [k #t] ...)]))
     
(define-syntax letl
  (syntax-rules ()
    [(_ [(id1 id2 ...) (e1 e2 ...)] body1 body2 ...) 
     (let ([tmp-lst (e1 e2 ...)])
       (letl ([id1 id2 ...] tmp-lst) body1 body2 ...))]
    [(_ ([id1 id2 ...] lst) body1 body2 ...) 
     (let ([id1 (. lst 0)])
       (letl ("i" 1) ([id2 ...] lst) body1 body2 ...))]
    [(_ ("i" ix) ([] lst) body1 body2 ...)
     (let () body1 body2 ...)]
    [(_ ("i" ix) ([id1 id2 ...] lst) body1 body2 ...)
     (let ([id1 (. lst ix)])
       (letl ("i" (+ ix 1)) ([id2 ...] lst) body1 body2 ...))]))